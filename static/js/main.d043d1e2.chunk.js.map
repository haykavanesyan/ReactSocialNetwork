{"version":3,"sources":["component/nav/nav.module.css","component/messages/messages.module.css","component/head/head.module.css","component/profile_head/profile_head.module.css","component/newPost/newPost.module.css","component/users/users.module.css","component/profile/profile.module.css","component/profile_nav/profile_nav.module.css","component/newPost/posts/posts.module.css","component/friend/friend.module.css","component/friend/friender/friender.module.css","gif/200.gif","component/head/head.js","DAL/api.js","redux/loginReducer.js","component/head/headContainer.js","component/nav/nav.js","component/profile_head/profile_head.js","component/profile_nav/profile_nav.js","component/newPost/posts/posts.js","component/newPost/newPost.js","component/newPost/newPostContainer.js","component/profile/profile.js","redux/profileReducer.js","component/profile/profileContainer.js","component/friend/friend.js","component/messages/friends/friends.js","component/messages/friends/chat.js","component/messages/messages.js","component/messages/messagesContainer.js","component/users/users.js","redux/usersReducer.js","component/users/usersContainer.js","component/login/login.js","App.js","serviceWorker.js","redux/messageReducer.js","redux/store.js","index.js"],"names":["module","exports","Head","props","className","h","head","login","userData","log","to","instance","axios","baseURL","withCredentials","headers","stateDefault","id","email","addData","data","type","HeadContainer","this","logInThunk","React","Component","connect","state","dispatch","get","then","res","resultCode","Nav","n","nav","item","Profile_head","profileInfo","p","profile_head","profilePicture","src","photos","large","Profile_nav","profile_nav","Posts","posts","post","like","NewPost","postsElement","profile","map","cikl","newPost","value","textValue","onChange","e","target","button","onClick","addPost","text","Profile","stater","ProfileRouter","match","params","userId","profileInformationThunk","ProfileAPI","withRouter","profileInformation","info","Friend","f","friend","Friends","name","Chat","message","Messages","friendsElement","messages","friendsData","chatElement","chatData","m","friends","chat","send","messageValue","messageValuer","addMessage","Users","users","s","block","ava","small","country","disabled","buttonDisable","some","followed","unFollowThunk","FollowThunk","activePage","wait","follow","unfollow","setUsers","waitChange","b","d","UsersAPI","pageChanger","getUsersThunk","totalItemsCount","pageRangeDisplayed","gif","usersPage","c","getUsers","items","page","Follow","delete","unFollow","Login","App","path","render","store","Boolean","window","location","hostname","reducers","combineReducers","action","filter","createStore","applyMiddleware","thunk","rerendering","ReactDOM","StrictMode","document","getElementById","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.d043d1e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__jF-7_\",\"item\":\"nav_item__1EvY7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"messages_messages__3R9HB\",\"friends\":\"messages_friends___kkYw\",\"chat\":\"messages_chat__3DKuC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"head_head__nUkF2\",\"login\":\"head_login__1dcnN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_head\":\"profile_head_profile_head__1TbLN\",\"profilePicture\":\"profile_head_profilePicture__33O6L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPost\":\"newPost_newPost__1hmJs\",\"button\":\"newPost_button__1_mgV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"users_block__3-uRW\",\"ava\":\"users_ava__1644M\",\"disable\":\"users_disable__2MrTn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__12aYL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_nav\":\"profile_nav_profile_nav__3-kJe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"posts_posts__1NqYB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"friend_friend__1b4I3\",\"text\":\"friend_text__2ZENo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"friender_item__1a0ny\"};","module.exports = __webpack_public_path__ + \"static/media/200.1d52ecc1.gif\";","import React from 'react';\r\nimport h from './head.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Head = (props) => {\r\n    return (\r\n    \t\r\n        <div className={h.head}>\r\n            <p>Head</p>\r\n\r\n               <div className={h.login}>\r\n           {props.userData.log ? props.userData.login : <NavLink to=\"/login\">login</NavLink>}\r\n        </div> \r\n\r\n        </div>\r\n\r\n        \r\n    );\r\n};\r\n\r\nexport default Head;","import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n\twithCredentials: true,\r\n\theaders: {\r\n\t\t\"API-KEY\": \"dfa7ba6d-ffa7-442f-a308-54584e93775b\",\r\n\t},\r\n});\r\n\r\n\r\nexport let getUsers = (e=1, c=20) => {\r\n\t\r\n\treturn instance.get(`users?page=${e}&count=${c}`).then(res => {\r\n\t\treturn res.data\r\n\t})\r\n}\r\n\r\n\r\nexport let logIn = () => {\r\n\t\r\n\treturn instance.get(`auth/me`).then(res => {\r\n\t\treturn res.data\r\n\t})\r\n}\r\n\r\n\r\nexport let unFollow = (id) => {\r\n\t\r\n\treturn instance.delete(`follow/${id}`).then(res => {\r\n\t\treturn res.data\r\n\t})\r\n}\r\n\r\n\r\nexport let Follow = (id) => {\r\n\t\r\n\treturn instance.post(`follow/${id}`).then(res => {\r\n\t\treturn res.data\r\n\t})\r\n}\r\n\r\n\r\n\r\nexport let profileInformation = (id) => {\r\n\t\r\n\treturn instance.get(`profile/${id}`).then(res => {\r\n          \r\n          return res.data\r\n    })\r\n}","import {logIn} from '../DAL/api'\r\n\r\nlet stateDefault = {\r\n\tid: null,\r\n\temail: null,\r\n\tlogin: null,\r\n\tlog: false,\r\n}\r\n\r\n\r\nexport let loginReducer = (state = stateDefault, action) =>{\r\n\r\n         switch (action.type) {\r\n         \tcase \"ADD_DATA\":\r\n         \t\treturn {\r\n         \t\t\t...state,\r\n         \t\t\t...action.data\r\n         \t\t}\r\n            case \"LOG\":\r\n            return {\r\n            \t...state,\r\n            \tlog: true\r\n            }\r\n         \t\t\r\n         \tdefault:\r\n         \t\treturn state\r\n         }\r\n     }\r\n\r\n\r\n export let  addData = (data) =>{return {type: \"ADD_DATA\", data: data}}\r\n export let  log = () =>{return {type: \"LOG\"}}\r\n\r\n\r\n\r\nexport let logInThunk = () =>{\r\n   return (dispatch) => {\r\n      logIn().then(data => {\r\n            \r\n            dispatch(addData(data.data))\r\n            if(data.resultCode === 0){\r\n                  dispatch(log())\r\n            }\r\n            \r\n    })\r\n   }\r\n}","import React from 'react'\r\nimport Head from './head'\r\nimport {connect} from 'react-redux'\r\nimport * as axios from 'axios'\r\nimport {addData, log, logInThunk} from '../../redux/loginReducer'\r\n\r\n\r\nclass HeadContainer extends React.Component{\r\n\tcomponentDidMount(){\r\n           \r\n          this.props.logInThunk()\r\n            \r\n  \r\n\t}\r\n\r\nrender(){\r\n\treturn <Head {...this.props} />\r\n}\r\n\r\n}\r\n\r\n\r\nlet mapStateToProps=(state)=>{\r\n\treturn({\r\n         userData: state.userData\r\n\t})\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {addData, log, logInThunk})(HeadContainer)","import React from 'react';\r\nimport n from './nav.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <div className={n.nav}>\r\n            <NavLink to=\"/profile\"><div className={n.item}>Profile</div></NavLink>\r\n            <div className={n.item}>Feeds</div>\r\n            <NavLink to=\"/messages\"><div className={n.item}>Messages</div></NavLink>\r\n            <NavLink to=\"/users\"><div className={n.item}>Find Users</div></NavLink>\r\n            \r\n            \r\n            \r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n\r\n","import React from 'react';\r\nimport p from './profile_head.module.css';\r\n\r\n\r\n\r\nconst Profile_head = (props) => {\r\n\tif(!props.profileInfo){\r\n\t\treturn <div></div>\r\n\t}\r\n    return (\r\n       <div className={p.profile_head}>\r\n          <div className={p.profilePicture}>\r\n           <img src={props.profileInfo.photos.large} />\r\n           </div>\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default Profile_head;","import React from 'react';\r\nimport p from './profile_nav.module.css';\r\n\r\n\r\nconst Profile_nav = () => {\r\n    return (\r\n        <div className={p.profile_nav}>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile_nav;","import React from 'react';\r\nimport p from './posts.module.css'\r\n\r\nconst Posts = (props) => {\r\n    return (\r\n        <div className={p.posts}>\r\n            {props.post}\r\n            <p> Likes: {props.like} </p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Posts;\r\n","import React from 'react'\r\nimport n from './newPost.module.css'\r\nimport Posts from \"./posts/posts\";\r\n\r\n\r\n\r\n\r\nconst NewPost = (props) => {\r\n  \r\n    let postsElement = props.profile.posts.map( cikl => <Posts post={cikl.post} like={cikl.like} />)\r\n\r\n    \r\n    let send = () =>{\r\n     props.addPost()\r\n}\r\n\r\nlet textChanger = (e) => {\r\n    let post = e.target.value\r\n    props.textValue(post)\r\n}\r\n    return (\r\n        <div className={n.newPost}>\r\n            <div>\r\n                <input value={props.profile.textValue} onChange={textChanger}/>\r\n                <div className={n.button}>\r\n                    <button onClick={send} >Post</button>\r\n\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n};\r\n\r\nexport default NewPost;","import React from 'react'\r\nimport NewPost from './newPost'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n\treturn ({\r\n\t\tprofile: state.profile,\r\n\r\n\t})\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n\treturn ({\r\n\t\taddPost: () => { dispatch({type: \"ADD_POST\"})},\r\n\t\ttextValue: (post) => {dispatch({type: \"TEXT_VALUES\", text: post})}\r\n\r\n\t})\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPost)","import React from 'react';\r\nimport p from './profile.module.css';\r\nimport Profile_head from '../profile_head/profile_head';\r\nimport Profile_nav from '../profile_nav/profile_nav';\r\nimport NewPost from '../newPost/newPost'\r\nimport NewPostContainer from '../newPost/newPostContainer'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n\tdebugger\r\n\t/*if(props.log === false) return <Redirect to={\"/login\"}/>*/\r\n\r\n    return (\r\n        <div className={p.profile}>\r\n            <Profile_head profileInfo={props.profileInfo}/>\r\n            <Profile_nav/>\r\n            <NewPostContainer />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import {profileInformation} from '../DAL/api'\r\n\r\nlet stater = {\r\n        posts: [],\r\n        textValue: \"\",\r\n        profileInfo: null,\r\n}\r\n \r\nexport let profileReducer = (state = stater, action) => {\r\n\t\r\n\t   switch (action.type) {\r\n\t   \tcase \"ADD_POST\": \r\n\t   \treturn {\r\n\t   \t\t...state,\r\n\t   \t\tposts: [{post: state.textValue, like: 0}, ...state.posts],\r\n\t   \t\ttextValue: \"\"\r\n\t   \t}\r\n\t   \tcase \"TEXT_VALUES\":\r\n\t   \treturn {\r\n\t   \t\t...state,\r\n\t   \t\ttextValue: action.text\r\n\t   \t}\r\n\r\n\t   \tcase \"SET_USERS_PROFILE\":\r\n\t   \treturn {\r\n\t   \t\t...state,\r\n\t   \t\tprofileInfo: action.info\r\n\t   \t}\r\n\t    default:\r\n\t        return state;\r\n}\r\n}\r\n\r\nexport let setUsersProfile = (info) => {return {type: \"SET_USERS_PROFILE\", info: info}}\r\n\r\n\r\nexport let profileInformationThunk = (id) => {\r\n\treturn (dispatch) => {\r\n\t\tprofileInformation(id).then(data =>\r\n              dispatch(setUsersProfile(data))\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\n","import React from 'react'\r\nimport Profile from './profile'\r\nimport {connect} from 'react-redux'\r\nimport * as axios from 'axios'\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {profileInformationThunk} from '../../redux/profileReducer'\r\n\r\n\r\nclass ProfileRouter extends React.Component{\r\n\r\n\t componentDidMount(){\r\n\t \t  \r\n          let id = this.props.match.params.userId\r\n          {!id ? id = 2 : id = this.props.match.params.userId}\r\n          this.props.profileInformationThunk(id)\r\n}\r\n\r\n\r\nrender(){\r\n\treturn <Profile {...this.props}/>\r\n}\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n\treturn({\r\n\t\tprofileInfo: state.profile.profileInfo,\r\n\t\tlog: state.userData.log\r\n\t})\r\n}\r\n\r\n\r\n\r\nconst ProfileAPI =  withRouter(ProfileRouter)\r\n\r\nexport default connect(mapStateToProps,{profileInformationThunk})(ProfileAPI)","import React from 'react';\r\nimport f from './friend.module.css';\r\nimport Friender from \"./friender/friender\";\r\nimport Posts from \"../newPost/posts/posts\";\r\n\r\n\r\n\r\nconst Friend = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className={f.friend}>\r\n           \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Friend;","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Friends = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <NavLink to={\"/messages/\" + props.name} > {props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Friends;\r\n\r\n","import React from 'react'\r\n\r\n\r\n\r\nconst Chat = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            {props.message}\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Chat;","import React from \"react\";\r\nimport m from './messages.module.css'\r\nimport Friends from \"./friends/friends\";\r\nimport Chat from \"./friends/chat\";\r\nimport {addMessage,changeMessage} from '../../state.js'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Messages = (props) => {\r\n\r\n    let friendsElement = props.messages.friendsData.map( cikl => <Friends name={cikl.name}/>);\r\n    let chatElement = props.messages.chatData.map( cikl => <Chat message={cikl.message}/>);\r\n\r\n    \r\n    let addMessager = () => {\r\n        props.addMessage()\r\n    }\r\n\r\nlet onChanger = (e) =>{\r\n    let messageValuer = e.target.value\r\n    props.messageValue(messageValuer)\r\n}\r\n\r\n\r\n    /*if(props.log === false) return <Redirect to={\"/login\"}/>*/\r\n\r\n    return (\r\n        <div className={m.messages}>\r\n            <div className={m.friends}>\r\n                {friendsElement}\r\n            </div>\r\n            <div className={m.chat}>\r\n               <div>\r\n                {chatElement}\r\n                </div>\r\n                <div className={m.send}>\r\n                <textarea value={props.messages.messageValue} onChange={onChanger} ></textarea>\r\n                <button onClick={addMessager}>Send</button>\r\n                </div>\r\n               </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Messages;","import React from \"react\";\r\nimport Messages from './messages'\r\nimport {connect} from \"react-redux\"\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n\treturn ({\r\n\t\tmessages: state.messages,\r\n\t\tlog: state.userData.log\r\n\t})\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn ({\r\n\t\taddMessage: () =>{\r\n\t\t\tdispatch({type: \"ADD_MESSAGE\" })\r\n\t\t},\r\n\t\tmessageValue: (messageValuer) =>{\r\n\t\t\tdispatch({type: \"MESSAGE_VALUE\", text: messageValuer})\r\n\t\t}\r\n\t})\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Messages);","import React from 'react'\r\nimport s from './users.module.css'\r\nimport {NavLink} from \"react-router-dom\"\r\nimport * as axios from 'axios'\r\n\r\n\r\nlet Users = (props) =>{\r\n          \r\n return <div>\r\n\r\n {\r\n  props.users.map((e) => {\r\n          return (\r\n               <div className={s.block}>\r\n               <NavLink to={'/profile/'+e.id}><div className={s.ava}><img src={e.photos.small}/></div></NavLink>\r\n               <div>\r\n               {e.name}\r\n               </div>\r\n                <div>\r\n               {e.country}\r\n               </div>\r\n                \r\n                <div>\r\n                  <button disabled={props.buttonDisable.some(id => id === e.id)}  onClick={e.followed ? \r\n                    \r\n                   () => {  \r\n                \r\n                    props.unFollowThunk(e.id)\r\n                  }\r\n                      \r\n                    : \r\n\r\n                   () => { \r\n                    props.FollowThunk(e.id)}\r\n                  }>\r\n\r\n                  {e.followed?\"unfollow\":\"follow\"}\r\n                  \r\n\r\n                  </button>\r\n                </div>\r\n               </div>\r\n            )\r\n        })\r\n}\r\n</div>\r\n \r\n}\r\n\r\n\r\n\r\nexport default Users","import {getUsers,unFollow,Follow} from '../DAL/api'\r\n\r\nlet stateDefault = {\r\n\tusers: [],\r\n\r\n\tactivePage: 1,\r\n\r\n\twait: false,\r\n\r\n    buttonDisable: [],\r\n\r\n}\r\n\r\nexport let usersReducer = (state = stateDefault, action) => {\r\n\r\n\tswitch(action.type){\r\n\t\tcase \"FOLLOW\":\r\n \r\n\t\t    return {\r\n\t\t    \t...state,\r\n\t\t    \tusers: state.users.map((e) => {\r\n\t\t    \t\tif(e.id === action.id){\r\n\t\t    \t\t\treturn {...e, followed: true}\r\n\t\t    \t\t}\r\n\t\t    \t\treturn e\r\n\t\t    \t})\r\n\t\t    }\r\n\r\n\t\tcase \"UNFOLLOW\":\r\n\r\n\t\t    return {\r\n\t\t    \t...state,\r\n\t\t    \tusers: state.users.map((e) => {\r\n\t\t    \t\tif(e.id === action.id){\r\n\t\t    \t\t\treturn {...e, followed: false}\r\n\t\t    \t\t}\r\n\t\t    \t\treturn e\r\n\t\t    \t})\r\n\t\t    }\r\n        case \"SET_USERS\":\r\n            \r\n            return {\r\n                \r\n                ...state,\r\n                users: [...action.users]\r\n\r\n            }\r\n\r\n            case \"CHANGE_PAGE\":\r\n\r\n              return {\r\n              \t...state,\r\n              \tactivePage: action.page\r\n              }\r\n\r\n              case \"WAIT\":\r\n              return{\r\n              \t...state,\r\n              \twait: action.b\r\n              }\r\n              case \"BUTTON_DISABLE\":\r\n              return{\r\n              \t...state,\r\n              \twait: action.d,\r\n              \tbuttonDisable: state.wait ?\r\n                 [...state.buttonDisable, action.userId]\r\n                 : state.buttonDisable.filter(id => id == action.userId)\r\n              \t\r\n              }\r\n\r\n\t\t    default:\r\n\t\t    return state\r\n\r\n\t}\r\n\r\n}\r\n\r\n export   let  follow = (id) => {return {type: \"FOLLOW\", id: id}}\r\nexport\tlet\t unfollow = (id) => { return {type: \"UNFOLLOW\", id: id}}\r\nexport\tlet\t setUsers = (users) => { return {type: \"SET_USERS\", users: users}}\r\nexport\tlet\t pageChanger = (page) => { return {type: \"CHANGE_PAGE\", page: page}}\r\nexport\tlet\t waitChange = (b) => { return {type: \"WAIT\", b: b}}\r\n export   let  button = (d,userId) => { return {type: \"BUTTON_DISABLE\",d,userId}}\r\n\r\n\r\nexport let getUsersThunk = (e, c) => {\r\n\tdebugger\r\n\treturn (dispatch) => {\r\n          dispatch(waitChange(true))\r\n          getUsers(e,c).then(data => {\r\n          \tdispatch(waitChange(false))\r\n          dispatch(setUsers(data.items))\r\n})\r\n\r\n\t\t}\r\n\r\n}\r\n\r\nexport let unFollowThunk = (id) => {\r\n\tdebugger\r\n\treturn(dispatch) => {\r\n\t\tdispatch(button(true, id))\r\n                    unFollow(id).then(data => {\r\n                       if(data.resultCode == 0){dispatch(unfollow(id))}\r\n                       \r\n                      \r\n                    })\r\n                  dispatch(button(false, id))\r\n\t}\r\n}\r\n\r\n\r\nexport let FollowThunk = (id) => {\r\n\tdebugger\r\n\treturn(dispatch) => {\r\n\t\tdispatch(button(true, id))\r\n                    Follow(id).then(data => {\r\n                       if(data.resultCode == 0){dispatch(follow(id))}\r\n                       \r\n                      \r\n                    })\r\n                  dispatch(button(false, id))\r\n\t}\r\n}","import React from 'react'\r\nimport Users from './users'\r\nimport {connect} from 'react-redux'\r\nimport * as axios from 'axios'\r\nimport Pagination from \"react-js-pagination\";\r\nimport gif from '../../gif/200.gif'\r\nimport {getUsers} from '../../DAL/api'\r\nimport {getUsersThunk,  follow, unfollow, setUsers, pageChanger, waitChange, button, FollowThunk, unFollowThunk} from '../../redux/usersReducer'\r\n\r\n\r\nclass UsersAPI extends React.Component {\r\n\r\n    componentDidMount(){\r\n           this.props.getUsersThunk()\r\n\r\n}\r\n\r\npageChanger = (e) => {\r\n\t     this.props.getUsersThunk(e)\r\n      \r\n}\r\n\r\n\r\n\r\nrender() {\r\n          \r\n return <div>\r\n\r\n <Pagination\r\n          activePage={this.props.activePage}\r\n          totalItemsCount={450}\r\n          pageRangeDisplayed={5}\r\n          onChange={this.pageChanger}\r\n        />\r\n           {this.props.wait ? <img src={gif}/> : \r\n        \r\n        <Users users={this.props.users}\r\n               follow={this.props.follow}\r\n               unfollow={this.props.unfollow}\r\n               button={this.props.button}\r\n               buttonDisable={this.props.buttonDisable}\r\n               FollowThunk={this.props.FollowThunk}\r\n               unFollowThunk={this.props.unFollowThunk}\r\n               />\r\n           }\r\n</div>\r\n}}\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {users: state.usersPage.users,\r\n\r\n\tactivePage: state.usersPage.activePage,\r\n\twait: state.usersPage.wait,\r\n  buttonDisable: state.usersPage.buttonDisable,\r\n}\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,{getUsersThunk,  follow, unfollow, setUsers, pageChanger, waitChange, button, FollowThunk, unFollowThunk})(UsersAPI)","import React from 'react'\r\n\r\nconst Login = (props) => {\r\n\treturn (\r\n          <h1>Login</h1>\r\n\t\t)\r\n}\r\n\r\nexport default Login","import React from 'react';\nimport './App.css';\nimport HeadContainer from './component/head/headContainer'\nimport Nav from './component/nav/nav'\nimport ProfileContainer from './component/profile/profileContainer'\nimport Friend from './component/friend/friend'\nimport MessagesContainer from './component/messages/messagesContainer'\nimport UsersContainer from './component/users/usersContainer'\nimport {Route} from \"react-router-dom\";\nimport Login from './component/login/login'\n\nconst App = (props) => {\n\n    return (\n        \n            <div className='app'>\n                <HeadContainer/>\n                <Nav/>\n                <div className='content'>\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer /> }/>\n                    <Route path='/messages' render={() => <MessagesContainer /> }/>\n                    <Route path='/users' render={() => <UsersContainer /> }/>\n                    <Route path='/login' render={() => <Login /> }/>\n                    \n                </div>\n                <Friend store={props.store}/>\n            </div>\n       );\n\n};\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let stater = {\r\n\t\r\n        friendsData: [\r\n            {name: 'David'},\r\n            {name: 'Diana'},\r\n            {name: 'Mko'},\r\n            {name: 'kavij'},\r\n            {name: 'Hayk'},\r\n            {name: 'Levon'},\r\n\r\n        ],\r\n        messageValue: \"\",\r\n        chatData: []\r\n        }\r\n\r\n\r\nexport let messageReducer = (state = stater, action) => {\r\n      switch (action.type) {\r\n         case \"ADD_MESSAGE\":\r\n\r\n            return {\r\n              ...state,\r\n              chatData: [...state.chatData, {message: state.messageValue}],\r\n              messageValue: \"\"\r\n            }\r\n         case \"MESSAGE_VALUE\":\r\n             return {\r\n              ...state,\r\n              messageValue: action.text\r\n             }\r\n         default:\r\n              return state\r\n      }\r\n}","import {combineReducers, createStore, applyMiddleware} from \"redux\"\r\nimport {profileReducer} from \"./profileReducer\"\r\nimport {messageReducer} from \"./messageReducer\"\r\nimport {usersReducer} from \"./usersReducer\"\r\nimport {loginReducer} from \"./loginReducer\"\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nlet reducers = combineReducers({\r\n\tprofile: profileReducer,\r\n\tmessages: messageReducer,\r\n\tusersPage: usersReducer,\r\n\tuserData: loginReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk))\r\n\r\nwindow.store = store\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {rerender} from './render'\nimport store from \"./redux/store\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport { Provider } from 'react-redux'\n\n\nlet rerendering = () => {\nReactDOM.render(\n  <React.StrictMode>\n  <BrowserRouter>\n  <Provider store={store}>\n    <App />\n   </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n}\n\nrerendering();\n\nstore.subscribe(rerendering);\n\n\n\n/*export var chatElement;\nexport var postsElement;\nexport var friendsElement;*/\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}