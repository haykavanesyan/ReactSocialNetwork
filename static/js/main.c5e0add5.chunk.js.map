{"version":3,"sources":["component/profile/profile.module.css","component/profile_nav/profile_nav.module.css","component/newPost/posts/posts.module.css","component/friend/friend.module.css","component/friend/friender/friender.module.css","component/login/login.module.css","gif/200.gif","validations/validate.js","component/head/head.js","DAL/api.js","redux/loginReducer.js","component/head/headContainer.js","component/nav/nav.js","component/profile_head/status.js","component/profile_head/profile_head.js","component/profile_nav/profile_nav.js","component/newPost/posts/posts.js","component/newPost/newPost.js","component/newPost/newPostContainer.js","component/profile/profile.js","redux/profileReducer.js","component/HOC/hoc.js","component/profile/profileContainer.js","component/friend/friend.js","component/messages/friends/friends.js","component/messages/friends/chat.js","component/login/element.js","component/messages/messages.js","component/messages/messagesContainer.js","component/users/users.js","redux/usersReducer.js","component/users/usersContainer.js","component/login/login.js","App.js","serviceWorker.js","redux/messageReducer.js","redux/store.js","index.js","component/nav/nav.module.css","component/messages/messages.module.css","component/head/head.module.css","component/profile_head/profile_head.module.css","component/newPost/newPost.module.css","component/users/users.module.css"],"names":["module","exports","max","Head","props","className","h","head","to","login","userData","log","href","onClick","logoutThunk","instance","axios","baseURL","withCredentials","headers","logIn","get","then","res","data","changeStatus","statuss","put","status","stateDefault","id","email","error","resultCode","addData","type","b","HeadContainer","this","logInThunk","React","Component","connect","state","dispatch","delete","Nav","n","nav","item","Status","bool","value","change","e","target","setState","activateMode","disableMode","profileInfo","userId","onBlur","onChange","Profile_head","p","profile_head","profilePicture","src","photos","large","Profile_nav","profile_nav","Posts","posts","post","like","PostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","name","button","NewPost","postsElement","profile","map","cikl","newPost","addPost","new_post","textValue","text","Profile","stater","withAuthRedirect","ProfileRouter","match","params","profileInformationThunk","getStatusThunk","compose","profileInformation","info","getStatus","withRouter","Friend","f","friend","Friends","Chat","message","Element","input","meta","errorer","touched","style","textarea","MessageFormRedux","placeholder","m","Messages","friendsElement","messages","friendsData","chatElement","chatData","friends","chat","send","addMessage","new_message","messageValue","messageValuer","Users","users","s","block","ava","country","disabled","buttonDisable","some","followed","unFollowThunk","FollowThunk","activePage","wait","follow","unfollow","setUsers","waitChange","d","UsersAPI","pageChanger","getUsersThunk","totalItemsCount","pageRangeDisplayed","gif","usersPage","c","getUsers","items","page","Follow","unFollow","loginThunk","password","rememberMe","LoginReduxForm","formData","max4","length","validate","App","path","render","store","Boolean","window","location","hostname","reducers","combineReducers","action","filter","formReducer","createStore","applyMiddleware","thunk","rerendering","ReactDOM","StrictMode","document","getElementById","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.c5e0add5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__12aYL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_nav\":\"profile_nav_profile_nav__3-kJe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"posts_posts__1NqYB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"friend_friend__1b4I3\",\"text\":\"friend_text__2ZENo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"friender_item__1a0ny\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"login_error__3g-zQ\"};","module.exports = __webpack_public_path__ + \"static/media/200.1d52ecc1.gif\";","import React from 'react'\r\n\r\n\r\n\r\nexport const error = (value) =>{\r\n\tif(!!value) return undefined\r\n\r\n\treturn \"fail\"\r\n}\r\n\r\n\r\nexport const maxlength = (max) => (value) => {\r\n\tif(value.length < max) return \"please write 8 simbols\"\r\n\r\n\t\treturn undefined\r\n}","import React from 'react';\r\nimport h from './head.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Head = (props) => {\r\n    return (\r\n    \t\r\n        <div className={h.head}>\r\n            <p><NavLink to=\"/\">HEAD</NavLink></p>\r\n\r\n               <div className={h.login}>\r\n           {props.userData.log ? <div>{props.userData.login} <button href=\"/login\" onClick={props.logoutThunk}>LogOut</button></div> : <NavLink to=\"/login\">login</NavLink>}\r\n        </div> \r\n\r\n        </div>\r\n\r\n        \r\n    );\r\n};\r\n\r\nexport default Head;","import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n\twithCredentials: true,\r\n\theaders: {\r\n\t\t\"API-KEY\": \"dfa7ba6d-ffa7-442f-a308-54584e93775b\",\r\n\t},\r\n});\r\n\r\n\r\nexport let getUsers = (e=1, c=20) => {\r\n\t\r\n\treturn instance.get(`users?page=${e}&count=${c}`).then(res => {\r\n\t\treturn res.data\r\n\t})\r\n}\r\n\r\n\r\nexport let logIn = () => {\r\n\tdebugger\r\n\treturn instance.get(`auth/me`).then(res => {\r\n\t\treturn res.data\r\n\t})\r\n}\r\n\r\n\r\nexport let unFollow = (id) => {\r\n\t\r\n\treturn instance.delete(`follow/${id}`).then(res => {\r\n\t\treturn res.data\r\n\t})\r\n}\r\n\r\n\r\nexport let Follow = (id) => {\r\n\t\r\n\treturn instance.post(`follow/${id}`).then(res => {\r\n\t\treturn res.data\r\n\t})\r\n}\r\n\r\n\r\n\r\nexport let profileInformation = (id) => {\r\n\t\r\n\treturn instance.get(`profile/${id}`).then(res => {\r\n          \r\n          return res.data\r\n    })\r\n}\r\n\r\n\r\nexport let getStatus = (id) => {\r\n\t\r\n\treturn instance.get(`profile/status/${id}`)\r\n\t\r\n}\r\n\r\nexport let changeStatus = (statuss) => {\r\n\t\r\n\treturn instance.put(`profile/status`,{status: statuss})\r\n\t\r\n}\r\n\r\n\r\nexport let login = (email, password, rememberMe) => {\r\n\r\n\treturn instance.post('auth/login', {email: email, password: password, rememberMe: rememberMe})\r\n}\r\n\r\n\r\nexport let logout = () => {\r\n\r\n\treturn instance.delete('auth/login')\r\n}\r\n\r\n\r\n\r\n","import {logIn, login, logout} from '../DAL/api'\r\n\r\n\r\nlet stateDefault = {\r\n\tid: null,\r\n\temail: null,\r\n\tlogin: null,\r\n\tlog: false,\r\n   error: '',\r\n   resultCode: null,\r\n}\r\n\r\n\r\nexport let loginReducer = (state = stateDefault, action) =>{\r\n\r\n         switch (action.type) {\r\n         \t\r\n               case \"ADD_DATA\":\r\n               return {\r\n                  ...state,\r\n                  ...action.data\r\n               }\r\n            case \"LOG\":\r\n            return {\r\n            \t...state,\r\n            \tlog: action.b\r\n            }\r\n            case \"LOGIN\":\r\n            return {\r\n               ...state,\r\n               error: action.error,\r\n               resultCode: action.resultCode\r\n            }\r\n         \t\t\r\n         \tdefault:\r\n         \t\treturn state\r\n         }\r\n     }\r\n\r\n\r\n export let  addData = (data) =>{return {type: \"ADD_DATA\", data: data}}\r\n export let  log = (b) =>{return {type: \"LOG\", b}}\r\n export let  logining = (error, resultCode) => {return {tyle: \"LOGIN\", error, resultCode}}\r\n\r\n\r\n\r\nexport let logInThunk = () =>{\r\n   return (dispatch) => {\r\n      logIn().then(data => {\r\n            \r\n            dispatch(addData(data.data))\r\n            if(data.resultCode === 0){\r\n                  dispatch(log(true))\r\n            }\r\n            \r\n    })\r\n   }\r\n}\r\n\r\nexport let loginThunk = (email, password, rememberMe) =>{\r\n   \r\n   return(dispatch) => login(email, password, rememberMe).then(res => {\r\n         \r\n         if(res.data.resultCode === 0){\r\n           logIn().then(data => {\r\n            \r\n            dispatch(addData(data.data))\r\n            if(data.resultCode === 0){\r\n                  dispatch(log(true))\r\n            }\r\n            \r\n    })\r\n         }\r\n      \r\n      })\r\n   \r\n   \r\n\r\n}\r\n\r\n\r\nexport let logoutThunk = () =>{\r\n   return (dispatch) => {\r\n      logout().then(res => {\r\n          if(res.data.resultCode === 0){\r\n           dispatch(addData(null))\r\n           dispatch(log(false))\r\n         }\r\n      })\r\n          \r\n          \r\n       }\r\n    }","import React from 'react'\r\nimport Head from './head'\r\nimport {connect} from 'react-redux'\r\nimport * as axios from 'axios'\r\nimport {addData, log, logInThunk, logoutThunk} from '../../redux/loginReducer'\r\n\r\n\r\nclass HeadContainer extends React.Component{\r\n\tcomponentDidMount(){\r\n           \r\n          this.props.logInThunk()\r\n            \r\n  \r\n\t}\r\n\r\nrender(){\r\n\treturn <Head {...this.props} />\r\n}\r\n\r\n}\r\n\r\n\r\nlet mapStateToProps=(state)=>{\r\n\treturn({\r\n         userData: state.userData\r\n\t})\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {addData, log, logInThunk, logoutThunk})(HeadContainer)","import React from 'react';\r\nimport n from './nav.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <div className={n.nav}>\r\n            <NavLink to=\"/profile\"><div className={n.item}>Profile</div></NavLink>\r\n            <div className={n.item}>Feeds</div>\r\n            <NavLink to=\"/messages\"><div className={n.item}>Messages</div></NavLink>\r\n            <NavLink to=\"/users\"><div className={n.item}>Find Users</div></NavLink>\r\n            \r\n            \r\n            \r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {getStatus,changeStatus} from '../../DAL/api'\r\n\r\nclass Status extends React.Component {\r\n\r\n    state = {\r\n    \tbool: true,\r\n        value: this.props.status\r\n    }\r\n    \r\n    change = (e) => {\r\n        changeStatus(e.target.value)\r\n    \tthis.setState({\r\n    \t\tvalue: e.target.value\r\n    \t}) \r\n        \r\n    \t\r\n    }\r\n\r\n    activateMode = () => {\r\n    \tthis.setState({\r\n    \t\tbool: true\r\n    \t})\r\n    }\r\n    disableMode = () => {\r\n    \tthis.setState({\r\n    \t\tbool: false\r\n    \t})\r\n    }\r\n\r\n\trender() {\r\ndebugger\r\n\t\treturn (\r\n\r\n\t\t\t<div>\r\n             {this.state.bool ? <span onClick={this.props.userData.id === this.props.profileInfo.userId?this.disableMode:null}> {this.props.status} </span> : \r\n             \t<input onBlur={this.activateMode} value={this.state.value} onChange={this.change}/> }\r\n             \t</div>\r\n\r\n\t\t\t)\r\n\t}\r\n          \r\n\r\n        \r\n\t\t\r\n}\r\n\r\n\r\n\r\n\r\nexport default Status","import React from 'react';\r\nimport p from './profile_head.module.css';\r\nimport Status from './status'\r\n\r\n\r\nconst Profile_head = (props) => {\r\n\tif(!props.profileInfo){\r\n\t\treturn <div></div>\r\n\t}\r\n    return (\r\n       <div className={p.profile_head}>\r\n          <div className={p.profilePicture}>\r\n           <img src={props.profileInfo.photos.large} />\r\n           </div>\r\n           <Status userData={props.userData} status={props.status} profileInfo={props.profileInfo}/>\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default Profile_head;","import React from 'react';\r\nimport p from './profile_nav.module.css';\r\n\r\n\r\nconst Profile_nav = () => {\r\n    return (\r\n        <div className={p.profile_nav}>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile_nav;","import React from 'react';\r\nimport p from './posts.module.css'\r\n\r\nconst Posts = (props) => {\r\n    return (\r\n        <div className={p.posts}>\r\n            {props.post}\r\n            <p> Likes: {props.like} </p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Posts;\r\n","import React from 'react'\r\nimport n from './newPost.module.css'\r\nimport Posts from \"./posts/posts\";\r\nimport {reduxForm, Field} from 'redux-form'\r\n\r\n\r\n\r\nconst NewPost = (props) => {\r\n  \r\n    let postsElement = props.profile.posts.map( cikl => <Posts post={cikl.post} like={cikl.like} />)\r\n\r\n    \r\n    let send = (value) =>{\r\n     props.addPost(value.new_post)\r\n}\r\n\r\nlet textChanger = (e) => {\r\n    let post = e.target.value\r\n    props.textValue(post)\r\n}\r\n    return (\r\n        <div className={n.newPost}>\r\n            <div>\r\n                <PostFormRedux onSubmit={send}/>\r\n            </div>\r\n            <div>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n};\r\n\r\nconst PostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field component=\"input\" name=\"new_post\"/>\r\n                <div className={n.button}>\r\n                <button>Post</button>\r\n\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst PostFormRedux = reduxForm({form: \"AddNewPost\"})(PostForm)\r\n\r\nexport default NewPost;","import React from 'react'\r\nimport NewPost from './newPost'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n\treturn ({\r\n\t\tprofile: state.profile,\r\n\r\n\t})\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n\treturn ({\r\n\t\taddPost: (value) => { dispatch({type: \"ADD_POST\", value})},\r\n\t\ttextValue: (post) => {dispatch({type: \"TEXT_VALUES\", text: post})}\r\n\r\n\t})\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPost)","import React from 'react';\r\nimport p from './profile.module.css';\r\nimport Profile_head from '../profile_head/profile_head';\r\nimport Profile_nav from '../profile_nav/profile_nav';\r\nimport NewPost from '../newPost/newPost'\r\nimport NewPostContainer from '../newPost/newPostContainer'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n\t\r\n\r\n    return (\r\n        <div className={p.profile}>\r\n            <Profile_head profileInfo={props.profileInfo} userData={props.userData} status={props.status}/>\r\n            <Profile_nav/>\r\n            <NewPostContainer />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import {profileInformation,getStatus} from '../DAL/api'\r\n\r\nlet stater = {\r\n        posts: [],\r\n        textValue: \"\",\r\n        profileInfo: null,\r\n        status: \"\"\r\n}\r\n \r\nexport let profileReducer = (state = stater, action) => {\r\n\t\r\n\t   switch (action.type) {\r\n\t   \tcase \"ADD_POST\": \r\n\t   \treturn {\r\n\t   \t\t...state,\r\n\t   \t\tposts: [{post: action.value, like: 0}, ...state.posts],\r\n\t   \t}\r\n\t   \tcase \"TEXT_VALUES\":\r\n\t   \treturn {\r\n\t   \t\t...state,\r\n\t   \t\ttextValue: action.text\r\n\t   \t}\r\n\r\n\t   \tcase \"SET_USERS_PROFILE\":\r\n\t   \treturn {\r\n\t   \t\t...state,\r\n\t   \t\tprofileInfo: action.info\r\n\t   \t}\r\n\t   \tcase \"SET_STATUS\":\r\n\t   \treturn {\r\n\t   \t\t...state,\r\n\t   \t\tstatus: action.status\r\n\t   \t}\r\n\t    default:\r\n\t        return state;\r\n}\r\n}\r\n\r\nexport let setUsersProfile = (info) => {return {type: \"SET_USERS_PROFILE\", info: info}}\r\nexport let setStatus = (status) => {return {type: \"SET_STATUS\", status: status}}\r\n\r\n\r\nexport let profileInformationThunk = (id) => {\r\n\treturn (dispatch) => {\r\n\t\tprofileInformation(id).then(data =>\r\n              dispatch(setUsersProfile(data))\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport let getStatusThunk = (id) => {\r\n\treturn (dispatch) => {\r\n          getStatus(id).then(res => {\r\n          \tdispatch(setStatus(res.data))\r\n          })\r\n\t}\r\n}\r\n\r\n","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nexport let withAuthRedirect = (Component) => {\r\n  let RedirectComponent = (props) => {\r\n\tif(!props.log) return <Redirect to={\"/login\"}/>\r\n\r\n\treturn <Component{...props}/>\r\n}\r\nreturn RedirectComponent\r\n}\r\n\r\n","import React from 'react'\r\nimport Profile from './profile'\r\nimport {connect} from 'react-redux'\r\nimport {compose} from 'redux'\r\nimport * as axios from 'axios'\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {profileInformationThunk,getStatusThunk} from '../../redux/profileReducer'\r\nimport {withAuthRedirect} from '../HOC/hoc'\r\n\r\n\r\n\r\nclass ProfileRouter extends React.Component{\r\n\r\n\t componentDidMount(){\r\n\t \t  \r\n          let id = this.props.match.params.userId\r\n          {!id ? id = this.props.userData.id : id = this.props.match.params.userId}\r\n          this.props.profileInformationThunk(id)\r\n          this.props.getStatusThunk(id)\r\n\r\n}\r\n\r\n\r\nrender(){\r\n\treturn <Profile {...this.props}/>\r\n}\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n\treturn({\r\n\t\tprofileInfo: state.profile.profileInfo,\r\n\t\tstatus: state.profile.status,\r\n\t\tlog: state.userData.log,\r\n\t\tuserData: state.userData,\r\n\r\n\t})\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps,{profileInformationThunk,getStatusThunk}),\r\n\twithRouter,\r\n\twithAuthRedirect\r\n)\r\n(ProfileRouter)\r\n\r\n","import React from 'react';\r\nimport f from './friend.module.css';\r\nimport Friender from \"./friender/friender\";\r\nimport Posts from \"../newPost/posts/posts\";\r\n\r\n\r\n\r\nconst Friend = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className={f.friend}>\r\n           \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Friend;","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Friends = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <NavLink to={\"/messages/\" + props.name} > {props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Friends;\r\n\r\n","import React from 'react'\r\n\r\n\r\n\r\nconst Chat = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            {props.message}\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Chat;","import React from 'react'\r\nimport style from './login.module.css'\r\n\r\nconst Element = (Element) => ({input, meta, ...props}) => {\r\n\tconst errorer = meta.touched && meta.error\r\n\r\n\treturn (\r\n         <div>\r\n         \t<Element className={(errorer ? style.error : '')} {...input} {...props} />\r\n         </div>\r\n\t\t)\r\n}\r\n\r\n\r\nexport const input = Element('input')\r\nexport const textarea = Element('textarea')\r\n","import React from \"react\";\r\nimport m from './messages.module.css'\r\nimport Friends from \"./friends/friends\";\r\nimport Chat from \"./friends/chat\";\r\nimport {addMessage,changeMessage} from '../../state.js'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {reduxForm, Field} from 'redux-form'\r\nimport {textarea} from '../login/element'\r\n\r\n\r\nconst Messages = (props) => {\r\n\r\n    let friendsElement = props.messages.friendsData.map( cikl => <Friends name={cikl.name}/>);\r\n    let chatElement = props.messages.chatData.map( cikl => <Chat message={cikl.message}/>);\r\n\r\n    \r\n    let addMessager = (value) => {\r\n        props.addMessage(value.new_message)\r\n    }\r\n\r\nlet onChanger = (e) =>{\r\n    let messageValuer = e.target.value\r\n    props.messageValue(messageValuer)\r\n}\r\n\r\n\r\n\r\n    return (\r\n        <div className={m.messages}>\r\n            <div className={m.friends}>\r\n                {friendsElement}\r\n            </div>\r\n            <div className={m.chat}>\r\n               <div>\r\n                {chatElement}\r\n                </div>\r\n                <div className={m.send}>\r\n                    <MessageFormRedux onSubmit={addMessager} />\r\n                </div>\r\n               </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst MessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field component={textarea} name=\"new_message\" placeholder=\"Write your message\"/>\r\n                <div className={m.button}>\r\n                <button>Senc</button>\r\n\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst MessageFormRedux = reduxForm({form: \"AddNewMessage\"})(MessageForm)\r\n\r\n\r\nexport default Messages;","import React from \"react\";\r\nimport Messages from './messages'\r\nimport {connect} from \"react-redux\"\r\nimport {withAuthRedirect} from '../HOC/hoc'\r\nimport {compose} from 'redux'\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n\treturn ({\r\n\t\tmessages: state.messages,\r\n\t\tlog: state.userData.log\r\n\t})\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn ({\r\n\t\taddMessage: (value) =>{\r\n\t\t\tdispatch({type: \"ADD_MESSAGE\", value })\r\n\t\t},\r\n\t\tmessageValue: (messageValuer) =>{\r\n\t\t\tdispatch({type: \"MESSAGE_VALUE\", text: messageValuer})\r\n\t\t}\r\n\t})\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n\t    connect(mapStateToProps,mapDispatchToProps),\r\n        withAuthRedirect\r\n\t)(Messages)","import React from 'react'\r\nimport s from './users.module.css'\r\nimport {NavLink} from \"react-router-dom\"\r\nimport * as axios from 'axios'\r\n\r\n\r\nlet Users = (props) =>{\r\n          \r\n return <div>\r\n\r\n {\r\n  props.users.map((e) => {\r\n          return (\r\n               <div className={s.block}>\r\n               <NavLink to={'/profile/'+e.id}><div className={s.ava}><img src={e.photos.large}/></div></NavLink>\r\n               <div>\r\n               {e.name}\r\n               </div>\r\n                <div>\r\n               {e.country}\r\n               </div>\r\n                \r\n                <div>\r\n                  <button disabled={props.buttonDisable.some(id => id === e.id)}  onClick={e.followed ? \r\n                    \r\n                   () => {  \r\n                \r\n                    props.unFollowThunk(e.id)\r\n                  }\r\n                      \r\n                    : \r\n\r\n                   () => { \r\n                    props.FollowThunk(e.id)}\r\n                  }>\r\n\r\n                  {e.followed?\"unfollow\":\"follow\"}\r\n                  \r\n\r\n                  </button>\r\n                </div>\r\n               </div>\r\n            )\r\n        })\r\n}\r\n</div>\r\n \r\n}\r\n\r\n\r\n\r\nexport default Users","import {getUsers,unFollow,Follow} from '../DAL/api'\r\n\r\nlet stateDefault = {\r\n\tusers: [],\r\n\r\n\tactivePage: 1,\r\n\r\n\twait: false,\r\n\r\n    buttonDisable: [],\r\n\r\n}\r\n \r\nexport let usersReducer = (state = stateDefault, action) => {\r\n\r\n\tswitch(action.type){\r\n\t\tcase \"FOLLOW\":\r\n \r\n\t\t    return {\r\n\t\t    \t...state,\r\n\t\t    \tusers: state.users.map((e) => {\r\n\t\t    \t\tif(e.id === action.id){\r\n\t\t    \t\t\treturn {...e, followed: true}\r\n\t\t    \t\t}\r\n\t\t    \t\treturn e\r\n\t\t    \t})\r\n\t\t    }\r\n\r\n\t\tcase \"UNFOLLOW\":\r\n\r\n\t\t    return {\r\n\t\t    \t...state,\r\n\t\t    \tusers: state.users.map((e) => {\r\n\t\t    \t\tif(e.id === action.id){\r\n\t\t    \t\t\treturn {...e, followed: false}\r\n\t\t    \t\t}\r\n\t\t    \t\treturn e\r\n\t\t    \t})\r\n\t\t    }\r\n        case \"SET_USERS\":\r\n            \r\n            return {\r\n                \r\n                ...state,\r\n                users: [...action.users]\r\n\r\n            }\r\n\r\n            case \"CHANGE_PAGE\":\r\n\r\n              return {\r\n              \t...state,\r\n              \tactivePage: action.page\r\n              }\r\n\r\n              case \"WAIT\":\r\n              return{\r\n              \t...state,\r\n              \twait: action.b\r\n              }\r\n              case \"BUTTON_DISABLE\":\r\n              return{\r\n              \t...state,\r\n              \twait: action.d,\r\n              \tbuttonDisable: state.wait ?\r\n                 [...state.buttonDisable, action.userId]\r\n                 : state.buttonDisable.filter(id => id == action.userId)\r\n              \t\r\n              }\r\n\r\n\t\t    default:\r\n\t\t    return state\r\n\r\n\t}\r\n\r\n}\r\n\r\n export   let  follow = (id) => {return {type: \"FOLLOW\", id: id}}\r\nexport\tlet\t unfollow = (id) => { return {type: \"UNFOLLOW\", id: id}}\r\nexport\tlet\t setUsers = (users) => { return {type: \"SET_USERS\", users: users}}\r\nexport\tlet\t pageChanger = (page) => { return {type: \"CHANGE_PAGE\", page: page}}\r\nexport\tlet\t waitChange = (b) => { return {type: \"WAIT\", b: b}}\r\n export   let  button = (d,userId) => { return {type: \"BUTTON_DISABLE\",d,userId}}\r\n\r\n\r\nexport let getUsersThunk = (e, c) => {\r\n\tdebugger\r\n\treturn (dispatch) => {\r\n          dispatch(waitChange(true))\r\n          getUsers(e,c).then(data => {\r\n          \tdispatch(waitChange(false))\r\n          dispatch(setUsers(data.items))\r\n})\r\n\r\n\t\t}\r\n\r\n}\r\n\r\nexport let unFollowThunk = (id) => {\r\n\tdebugger\r\n\treturn(dispatch) => {\r\n\t\tdispatch(button(true, id))\r\n                    unFollow(id).then(data => {\r\n                       if(data.resultCode == 0){dispatch(unfollow(id))}\r\n                       \r\n                      \r\n                    })\r\n                  dispatch(button(false, id))\r\n\t}\r\n}\r\n\r\n\r\nexport let FollowThunk = (id) => {\r\n\tdebugger\r\n\treturn(dispatch) => {\r\n\t\tdispatch(button(true, id))\r\n                    Follow(id).then(data => {\r\n                       if(data.resultCode == 0){dispatch(follow(id))}\r\n                       \r\n                      \r\n                    })\r\n                  dispatch(button(false, id))\r\n\t}\r\n}","import React from 'react'\r\nimport Users from './users'\r\nimport {connect} from 'react-redux'\r\nimport * as axios from 'axios'\r\nimport Pagination from \"react-js-pagination\";\r\nimport gif from '../../gif/200.gif'\r\nimport {getUsers} from '../../DAL/api'\r\nimport {getUsersThunk,  follow, unfollow, setUsers, pageChanger, waitChange, button, FollowThunk, unFollowThunk} from '../../redux/usersReducer'\r\n\r\n\r\nclass UsersAPI extends React.Component {\r\n\r\n    componentDidMount(){\r\n           this.props.getUsersThunk()\r\n\r\n}\r\n\r\npageChanger = (e) => {\r\n\t     this.props.getUsersThunk(e)\r\n      \r\n}\r\n\r\n\r\n \r\nrender() {\r\n          \r\n return <div>\r\n\r\n <Pagination\r\n          activePage={this.props.activePage}\r\n          totalItemsCount={450}\r\n          pageRangeDisplayed={5}\r\n          onChange={this.pageChanger}\r\n        />\r\n           {this.props.wait ? <img src={gif}/> : \r\n        \r\n        <Users users={this.props.users}\r\n               follow={this.props.follow}\r\n               unfollow={this.props.unfollow}\r\n               button={this.props.button}\r\n               buttonDisable={this.props.buttonDisable}\r\n               FollowThunk={this.props.FollowThunk}\r\n               unFollowThunk={this.props.unFollowThunk}\r\n               />\r\n           }\r\n</div>\r\n}}\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {users: state.usersPage.users,\r\n\r\n\tactivePage: state.usersPage.activePage,\r\n\twait: state.usersPage.wait,\r\n  buttonDisable: state.usersPage.buttonDisable,\r\n}\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,{getUsersThunk,  follow, unfollow, setUsers, pageChanger, waitChange, button, FollowThunk, unFollowThunk})(UsersAPI)","import React from 'react'\r\nimport {reduxForm, Field} from 'redux-form'\r\nimport {error, maxlength} from '../../validations/validate.js'\r\nimport {input} from './element.js'\r\nimport {loginThunk} from '../../redux/loginReducer.js'\r\nimport Profile from '../profile/profile.js'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n\tconst onSubmit = (formData) =>{\r\n\r\n       props.loginThunk(formData.login, formData.password, true)\r\n       \r\n\r\n        \r\n\r\n\t}\r\n           \r\n        if(props.log === true) {\r\n            return <Redirect to=\"/profile\" />\r\n        }\r\n\r\n\t\treturn (\r\n         <div>\r\n         <LoginReduxForm onSubmit={onSubmit}/>\r\n         </div>\r\n\t\t)\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        log: state.userData.log\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {loginThunk})(Login)\r\n\r\n\r\n\r\n\r\nconst max4 = maxlength(4)\r\nconst LoginForm = (props) => {\r\n\tdebugger\r\n    return (\r\n          <form onSubmit={props.handleSubmit}>\r\n            \r\n            <Field name=\"login\" component={input} placeholder=\"login\" validate={[error]}/><br/>\r\n            <Field name=\"password\" component={input} placeholder=\"Password\" type=\"password\" validate={[error,max4]}/><br/>\r\n            <Field name=\"rememberMe\" component=\"input\" type=\"checkbox\"/>Remember Me<br/>\r\n            <button>login</button><br/>\r\n\r\n          </form>\r\n\t\t)\r\n}\r\n\r\n\r\n\r\nconst LoginReduxForm = reduxForm({\r\n\tform:'login'\r\n})(LoginForm)\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport HeadContainer from './component/head/headContainer'\nimport Nav from './component/nav/nav'\nimport ProfileContainer from './component/profile/profileContainer'\nimport Friend from './component/friend/friend'\nimport MessagesContainer from './component/messages/messagesContainer'\nimport UsersContainer from './component/users/usersContainer'\nimport {Route} from \"react-router-dom\";\nimport Login from './component/login/login'\n\nconst App = (props) => {\n\n    return (\n        \n            <div className='app'>\n                <HeadContainer/>\n                <Nav/>\n                <div className='content'>\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer /> }/>\n                    <Route path='/messages' render={() => <MessagesContainer /> }/>\n                    <Route path='/users' render={() => <UsersContainer /> }/>\n                    <Route path='/login' render={() => <Login /> }/>\n                    \n                </div>\n                <Friend store={props.store}/>\n            </div>\n       );\n\n};\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let stater = {\r\n\t\r\n        friendsData: [\r\n            {name: 'David'},\r\n            {name: 'Diana'},\r\n            {name: 'Mko'},\r\n            {name: 'kavij'},\r\n            {name: 'Hayk'},\r\n            {name: 'Levon'},\r\n\r\n        ],\r\n        messageValue: \"\",\r\n        chatData: []\r\n        }\r\n\r\n\r\nexport let messageReducer = (state = stater, action) => {\r\n      switch (action.type) {\r\n         case \"ADD_MESSAGE\":\r\n\r\n            return {\r\n              ...state,\r\n              chatData: [...state.chatData, {message: action.value}],\r\n             \r\n            }\r\n         case \"MESSAGE_VALUE\":\r\n             return {\r\n              ...state,\r\n              messageValue: action.text\r\n             }\r\n         default:\r\n              return state\r\n      }\r\n}","import {combineReducers, createStore, applyMiddleware} from \"redux\"\r\nimport {profileReducer} from \"./profileReducer\"\r\nimport {messageReducer} from \"./messageReducer\"\r\nimport {usersReducer} from \"./usersReducer\"\r\nimport {loginReducer} from \"./loginReducer\"\r\nimport thunk from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\n\r\nlet reducers = combineReducers({\r\n\tprofile: profileReducer,\r\n\tmessages: messageReducer,\r\n\tusersPage: usersReducer,\r\n\tuserData: loginReducer,\r\n\tform: formReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk))\r\n\r\nwindow.store = store\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {rerender} from './render'\nimport store from \"./redux/store\";\nimport {HashRouter} from \"react-router-dom\";\nimport { Provider } from 'react-redux'\n\n\nlet rerendering = () => {\nReactDOM.render(\n  <React.StrictMode>\n  <HashRouter>\n  <Provider store={store}>\n    <App />\n   </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n}\n\nrerendering();\n\nstore.subscribe(rerendering);\n\n\n\n/*export var chatElement;\nexport var postsElement;\nexport var friendsElement;*/\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__jF-7_\",\"item\":\"nav_item__1EvY7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"messages_messages__3R9HB\",\"friends\":\"messages_friends___kkYw\",\"chat\":\"messages_chat__3DKuC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"head_head__nUkF2\",\"login\":\"head_login__1dcnN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_head\":\"profile_head_profile_head__1TbLN\",\"profilePicture\":\"profile_head_profilePicture__33O6L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPost\":\"newPost_newPost__1hmJs\",\"button\":\"newPost_button__1_mgV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"users_block__3-uRW\",\"ava\":\"users_ava__1644M\",\"disable\":\"users_disable__2MrTn\"};"],"sourceRoot":""}